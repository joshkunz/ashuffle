# Based on debian, so apt should work.
FROM ubuntu:22.04

# renovate: datasource=pypi depName=meson
ENV MESON_VERSION=1.3.1

RUN env DEBIAN_FRONTEND=noninteractive apt-get update -y && \
    env DEBIAN_FRONTEND=noninteraceive apt-get install --no-install-recommends -y \
        build-essential \
        cmake \
        doxygen \
        fuse \
        gcc-9 g++-9 \
        git \
        libboost-all-dev \
        libglib2.0-dev \
        libmad0-dev libid3tag0-dev \
        ninja-build \
        pkg-config \
        python3 python3-pip python3-setuptools python3-wheel \
        valgrind \
        wget \
        xz-utils && \
    apt-get autoremove -y && \
    apt-get clean && \
    pip3 install \
        meson==${MESON_VERSION}

COPY /t/docker/install_go.sh /opt/helpers/
# renovate: datasource=github-tags depName=golang/go
ENV GO_VERSION=go1.21.6
RUN /opt/helpers/install_go.sh ${GO_VERSION}

COPY /tools/meta/ /opt/meta
RUN cd /opt/meta && go build

# Install libmpdclient

ARG LIBMPDCLIENT_VERSION
ENV LIBMPDCLIENT_VERSION ${LIBMPDCLIENT_VERSION:-latest}
RUN /opt/meta/meta install libmpdclient \
    --version=${LIBMPDCLIENT_VERSION} --prefix=/usr

# Install MPD

ARG MPD_VERSION
ENV MPD_VERSION ${MPD_VERSION:-latest}
COPY /t/docker/patches/ /patches/
RUN /opt/meta/meta install mpd \
    --version=${MPD_VERSION} --patch_root=/patches --prefix=/usr

# Install our static test helpers

COPY /t/static/mpd.conf /conf

# Copy in the integration test runner

COPY /t/docker/run_integration.sh /exec/

# The directory that contains the staged ashuffle source. If unset the
# build directory (presumably the ashuffle root) is used. This has some
# drawbacks, like potentially including a build directory that would conflict
# with the container's build directory.
ARG STAGE_DIR
ENV STAGE_DIR ${STAGE_DIR:-./}

# This archive is created automatically by the build script. Note, this archive
# is automatically extracted by this rule.
ADD ${STAGE_DIR}/ashuffle-archive.tar /ashuffle/

RUN cd /ashuffle && \
    /opt/meta/meta testbuild

ENTRYPOINT ["/exec/run_integration.sh"]
