#!/bin/bash

set -euo pipefail

function die() {
    echo "$@" >&2
    exit 1
}

usage() {
    cat <<EOF
usage: $0 [-m <mpd version>] [-l <libmpdclient version>] [-t <tag>] [...]

Arguments:
    -h, --help                  Display this help text.
    -m, --mpd-version           Use the given version of MPD.
    -l, --libmpdclient-version  Use the given version of libmpdclient.
    -t, --image-tag             Use the given tag for the built image.
                                Used as part of the github workflow.
Any remaining arguments ([...]) are passed to docker.
EOF
    exit 1
}

# Use the environment variables by default.
MPD_VERSION="${MPD_VERSION:-}"
LIBMPDCLIENT_VERSION="${LIBMPDCLIENT_VERSION:-}"
IMAGE_TAG="${IMAGE_TAG:-test/mpd:latest}"

declare -a DOCKER_ARGS
while test "$#" -gt 0; do
    case "$1" in
        -h|--help)
            usage
            ;;
        -m|--mpd-version)
            MPD_VERSION="$2"
            shift 2
            ;;
        -l|--libmpdclient-version)
            LIBMPDCLIENT_VERSION="$2"
            shift 2
            ;;
        -t|--image-tag)
            IMAGE_TAG="$2"
            shift 2
            ;;
        *)
            DOCKER_ARGS+=( "$1" )
            shift
            ;;
    esac
done

cd $(git rev-parse --show-toplevel)

args=( "${DOCKER_ARGS[@]}" )
if test -n "${MPD_VERSION}"; then
    args+=( "--build-arg" "MPD_VERSION=${MPD_VERSION}" )
fi
if test -n "${LIBMPDCLIENT_VERSION}"; then
    args+=( "--build-arg" "LIBMPDCLIENT_VERSION=${LIBMPDCLIENT_VERSION}" )
fi
docker build "${args[@]}" \
    -t "${IMAGE_TAG}" -f ./t/docker/Dockerfile.ubuntu .
